"""Add new tables

Revision ID: 4a13285f6626
Revises: 
Create Date: 2025-01-02 00:36:50.078330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4a13285f6626'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('maps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('telegram_id')
    )
    op.create_table('map_objects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('is_farmable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['map_id'], ['maps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('map_objects_position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('x1', sa.Integer(), nullable=False),
    sa.Column('y1', sa.Integer(), nullable=False),
    sa.Column('x2', sa.Integer(), nullable=False),
    sa.Column('y2', sa.Integer(), nullable=False),
    sa.Column('map_object_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['map_object_id'], ['map_objects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('health', sa.Integer(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('map_object_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['map_id'], ['maps.id'], ),
    sa.ForeignKeyConstraint(['map_object_id'], ['map_objects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players_bases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('defense_level', sa.Integer(), nullable=False),
    sa.Column('map_object_id', sa.Integer(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['map_id'], ['maps.id'], ),
    sa.ForeignKeyConstraint(['map_object_id'], ['map_objects.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resources_zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('curren_resource_amount', sa.Integer(), nullable=False),
    sa.Column('regeneration_rate', sa.Integer(), nullable=False),
    sa.Column('map_object_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['map_id'], ['maps.id'], ),
    sa.ForeignKeyConstraint(['map_object_id'], ['map_objects.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slots', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('inventories')
    op.drop_table('resources_zones')
    op.drop_table('players_bases')
    op.drop_table('players')
    op.drop_table('map_objects_position')
    op.drop_table('map_objects')
    op.drop_table('users')
    op.drop_table('resources')
    op.drop_table('maps')
    # ### end Alembic commands ###
